django==4.2.7 
psycopg2-binary==2.9.7
PyJWT==2.8.0 # Pour PostgreSQL
# psycopg2-binary est utilisé pour se connecter à la base de données PostgreSQL
#SQLAlchemy==2.0.21 
django-cors-headers==4.3.1 
dj-database-url==2.2.0
djangorestframework==3.14.0  # Pour API REST
gunicorn==21.2.0 # Serveur WSGI pour production railway
# Pour Railway, on utilise gunicorn pour servir l'application Django
# et on expose le port défini par Railway.
# Railway utilise la variable d'environnement PORT pour définir le port sur lequel l'application doit écouter.
whitenoise==6.6.0
requests==2.31.0
 # Pour servir les fichiers statiques en production
# whitenoise est utilisé pour servir les fichiers statiques en production
# Il est recommandé de l'utiliser avec Django pour simplifier la gestion des fichiers statiques.
# Il permet de servir les fichiers statiques directement depuis l'application Django sans avoir besoin d'un serveur web séparé comme Nginx ou Apache.
# Cela simplifie le déploiement et la configuration de l'application.
# whitenoise est particulièrement utile pour les applications déployées sur des